<?php //App%255CDTO%255CTricksDto%2524file

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\File'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\File')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
    ],
    null,
    [
        'stdClass' => [
            'binaryFormat' => [
                false,
            ],
            'mimeTypes' => [
                [
                    'image/jpg',
                    'image/jpeg',
                    'image/png',
                ],
            ],
            'maxSizeMessage' => [
                'L\'image ne doit pas dépasser 5Mb.',
            ],
            'mimeTypesMessage' => [
                'Les images doivent être au format JPG ou PNG.',
            ],
            'groups' => [
                [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
            'pattern' => [
                1 => '/^[a-zA-Z]+[0-9]+.+$/',
            ],
        ],
        'Symfony\\Component\\Validator\\Constraints\\File' => [
            'maxSize' => [
                5000000,
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
    ],
    []
); }];
